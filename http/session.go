package http

import (
	"encoding/json"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// Session
// ****************************************************************************************************************************************
type Session interface {
	Body() []byte
	Err() error
	Next()
	ParseJson(interface{}) error
	Status() string
	StatusCode() int
	String() string
}

// Body
// ****************************************************************************************************************************************
func (o *context) Body() []byte {
	return o.body
}

// Err
// ****************************************************************************************************************************************
func (o *context) Err() (err error) {
	return o.err
}

// Next
// ****************************************************************************************************************************************
func (o *context) Next() {
	o.Handler++
	if o.Handler >= len(o.Handlers) || o.Handlers[o.Handler] == nil {
		return
	}

	o.Handlers[o.Handler](o)
}

// Parse
// ****************************************************************************************************************************************
func (o *context) ParseJson(dto interface{}) (err error) {
	return json.Unmarshal(o.body, dto)
}

// Status
// ****************************************************************************************************************************************
func (o *context) Status() (s string) {
	if o.Response != nil {
		s = o.Response.Status
	}

	return
}

// StatusCode
// ****************************************************************************************************************************************
func (o *context) StatusCode() (c int) {
	if o.Response != nil {
		c = o.Response.StatusCode
	}

	return
}

// String
// ****************************************************************************************************************************************
func (o *context) String() string {
	return string(o.body)
}

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
