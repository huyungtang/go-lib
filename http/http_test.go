package http

import (
	"testing"

	"github.com/huyungtang/go-lib/strings"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// TestGet
// ****************************************************************************************************************************************
func TestGet(t *testing.T) {
	done := 0
	client, err := Init("https://news.autotronic.com.tw", HandlerOption(func(ctx HttpResult) {
		ctx.Next()
		done++
	}))
	if err != nil {
		t.Error(err)
	}

	client.Get("sitemap.xml", HandlerOption(func(ctx HttpResult) {
		if ctx.StatusCode() != 200 {
			t.Fail()
		}

		if !strings.HasPrefix(ctx.String(), `<?xml version="1.0" encoding="utf-8" standalone="yes"?>`) {
			t.Fail()
		}
		done++
	}))

	client.Get("gsbyo3qfw7nv4hev", HandlerOption(func(ctx HttpResult) {
		if ctx.StatusCode() != 200 {
			t.Fail()
		}

		if !strings.HasPrefix(ctx.String(), `<!doctype html><html lang=en-us><head>`) {
			t.Fail()
		}
		done++
	}))

	if done != 4 {
		t.Fail()
	}
}

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
