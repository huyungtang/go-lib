package http

import (
	"errors"
	base "net/http"
	"net/url"

	"github.com/huyungtang/go-lib/reflect"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// Init
// ****************************************************************************************************************************************
func Init(hostURL string, opts ...Options) (client HttpClient, err error) {
	var host *url.URL
	if host, err = url.Parse(hostURL); err != nil {
		return
	}

	if host.Scheme != "http" && host.Scheme != "https" {
		return nil, errors.New("host url prefix shoud be http or https")
	}

	opts = append([]Options{
		HostOption(host),
	}, opts...)

	ctx := &httpResult{
		Option: Option{},
	}
	ctx.ApplyOptions(opts)

	return ctx, nil
}

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// HttpClient
// ****************************************************************************************************************************************
type HttpClient interface {
	Get(string, ...Options)
	Post(string, ...Options)
}

// Get
// ****************************************************************************************************************************************
func (o *httpResult) Get(path string, opts ...Options) {
	ctx := reflect.Clone(o).(*httpResult)
	ctx.requestCore(base.MethodGet, path, opts)
}

// Post
// ****************************************************************************************************************************************
func (o *httpResult) Post(path string, opts ...Options) {
	ctx := reflect.Clone(o).(*httpResult)
	ctx.ApplyOptions(opts, urlencodedOption)
	ctx.requestCore(base.MethodGet, path, opts)
}

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
