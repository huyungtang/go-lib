package http

import (
	"errors"
	"net/url"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// Init
// ****************************************************************************************************************************************
func Init(hostURL string, opts ...Options) (client Client, err error) {
	var host *url.URL
	if host, err = url.Parse(hostURL); err != nil {
		return
	}

	if host.Scheme != "http" && host.Scheme != "https" {
		return nil, errors.New("host url prefix shoud be http or https")
	}

	opts = append([]Options{
		HostOption(host),
	}, opts...)

	return &context{
		Option: new(Option).ApplyOptions(opts),
	}, nil
}

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// Client
// ****************************************************************************************************************************************
type Client interface {
	Get(string, ...Options)
	Post(string, ...Options)
}

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
