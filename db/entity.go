package db

import (
	"github.com/huyungtang/go-lib/times"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// Identity
// ****************************************************************************************************************************************
type Identity interface {
	SetId(interface{})
}

// ****************************************************************************************************************************************
// Paged
// ****************************************************************************************************************************************
type Paged interface {
	GetPage() int
	GetSize() int
	GetData() interface{}
	SetCount(int64)
}

// PagedEntity
// ****************************************************************************************************************************************
type PagedEntity struct {
	Page  int         `json:"page"`
	Size  int         `json:"size"`
	Count int64       `json:"count"`
	Data  interface{} `json:"data"`
}

// Apply
// ****************************************************************************************************************************************
func (o *PagedEntity) Apply(p []int64) *PagedEntity {
	s := []int64{0, 0}
	copy(s, p)
	o.Page = int(s[0])
	o.Size = int(s[1])

	return o
}

// PageInfo
// ****************************************************************************************************************************************
func (o *PagedEntity) PageInfo() []int64 {
	return []int64{int64(o.Page), int64(o.Size), int64(o.Count)}
}

// GetPage
// ****************************************************************************************************************************************
func (o *PagedEntity) GetPage() int {
	return o.Page
}

// GetSize
// ****************************************************************************************************************************************
func (o *PagedEntity) GetSize() int {
	return o.Size
}

// GetData
// ****************************************************************************************************************************************
func (o *PagedEntity) GetData() interface{} {
	return o.Data
}

// SetCount
// ****************************************************************************************************************************************
func (o *PagedEntity) SetCount(count int64) {
	o.Count = count
}

// ****************************************************************************************************************************************
// Created
// ****************************************************************************************************************************************
type Created interface {
	Create()
}

// CreatedEntity
// ****************************************************************************************************************************************
type CreatedEntity struct {
	CreatedAt int64 `gorm:"column:created_at;autoUpdateTime:false"`
}

// Create
// ****************************************************************************************************************************************
func (o *CreatedEntity) Create() {
	o.CreatedAt = currnetTime()
}

// ****************************************************************************************************************************************
// Updated
// ****************************************************************************************************************************************
type Updated interface {
	Update()
}

// UpdatedEntity
// ****************************************************************************************************************************************
type UpdatedEntity struct {
	UpdatedAt int64 `gorm:"column:updated_at;autoUpdateTime:false"`
}

// Update
// ****************************************************************************************************************************************
func (o *UpdatedEntity) Update() {
	o.UpdatedAt = currnetTime()
}

// ****************************************************************************************************************************************
// Deleted
// ****************************************************************************************************************************************
type Deleted interface {
	Delete()
}

// DeletedEntity
// ****************************************************************************************************************************************
type DeletedEntity struct {
	DeletedAt int64 `gorm:"column:deleted_at;autoUpdateTime:false"`
}

// Delete
// ****************************************************************************************************************************************
func (o *DeletedEntity) Delete() {
	o.DeletedAt = currnetTime()
}

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// currnetTime **********************************************************************************************************************
func currnetTime() int64 {
	return times.Now().UnixMilli()
}
