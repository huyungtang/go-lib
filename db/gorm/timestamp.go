package gorm

import (
	"github.com/huyungtang/go-lib/times"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// Created
// ****************************************************************************************************************************************
type Created struct {
	CreatedAt int64 `gorm:"column:created_at;autoUpdateTime:false;<-:create" json:",omitempty"`
}

// Create
// ****************************************************************************************************************************************
func (o *Created) Create() {
	o.CreatedAt = currnetTime()
}

// String
// ****************************************************************************************************************************************
func (o *Created) String(fmt string) string {
	return times.Format(times.FromUnix(o.CreatedAt/1000, 0), fmt)
}

// Updated
// ****************************************************************************************************************************************
type Updated struct {
	UpdatedAt int64 `gorm:"column:updated_at;autoUpdateTime:false" json:",omitempty"`
}

// Update
// ****************************************************************************************************************************************
func (o *Updated) Update() {
	o.UpdatedAt = currnetTime()
}

// String
// ****************************************************************************************************************************************
func (o *Updated) String(fmt string) string {
	return times.Format(times.FromUnix(o.UpdatedAt/1000, 0), fmt)
}

// Deleted
// ****************************************************************************************************************************************
type Deleted struct {
	DeletedAt int64 `gorm:"column:deleted_at;autoUpdateTime:false" json:",omitempty"`
}

// Delete
// ****************************************************************************************************************************************
func (o *Deleted) Delete() {
	o.DeletedAt = currnetTime()
}

// String
// ****************************************************************************************************************************************
func (o *Deleted) String(fmt string) string {
	return times.Format(times.FromUnix(o.DeletedAt/1000, 0), fmt)
}

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// currnetTime ****************************************************************************************************************************
func currnetTime() int64 {
	return times.Now().UnixMilli()
}
