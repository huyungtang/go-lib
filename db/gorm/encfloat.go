package gorm

import (
	"database/sql/driver"
	"strconv"

	"github.com/huyungtang/go-lib/strings"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

const (
	encFloatPoint float64 = 10000
)

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// EncFloat
// ****************************************************************************************************************************************
type EncFloat float64

// Scan
// ****************************************************************************************************************************************
func (o *EncFloat) Scan(val any) (err error) {
	var s string
	if s, err = decryptString(val); err != nil {
		return
	}

	var v float64
	if v, err = strconv.ParseFloat(s, 64); err != nil {
		return
	}

	*o = EncFloat(v / encFloatPoint)

	return
}

// Value
// ****************************************************************************************************************************************
func (o EncFloat) Value() (val driver.Value, err error) {
	s := strings.Format("%020d", int64(float64(o)*encFloatPoint))

	return encryptString(s)
}

// Set
// ****************************************************************************************************************************************
func (o *EncFloat) Set(v float64) {
	*o = EncFloat(v)
}

// String
// ****************************************************************************************************************************************
func (o EncFloat) Float() float64 {
	return float64(o)
}

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
