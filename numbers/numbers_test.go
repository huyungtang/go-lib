package numbers

import (
	"testing"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// TestMaxInt
// ****************************************************************************************************************************************
func TestMaxInt(t *testing.T) {
	is := []int{3, 2, 6, 4, 5, 1, 7, 8, 9, 0}
	if MaxInt(is[0], is[1:]...) != 9 {
		t.Fail()
	}
}

// TestMinInt
// ****************************************************************************************************************************************
func TestMinInt(t *testing.T) {
	is := []int{3, 2, 6, 4, 5, 1, 7, 8, 9, 0}
	if MinInt(is[0], is[1:]...) != 0 {
		t.Fail()
	}
}

// TestRand
// ****************************************************************************************************************************************
func TestRand(t *testing.T) {
	mi, mx := 20, 100
	rn := Rand(mi, mx)
	for i := 0; i < 10; i++ {
		if r := rn.NextInt(); r < mi || r > mx {
			t.Fail()
			break
		}
	}
}

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
