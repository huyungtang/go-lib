package times

import (
	"testing"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// TestParse
// ****************************************************************************************************************************************
func TestParse(t *testing.T) {
	dt := "2006-01-02 15:04:05"
	tm, err := Parse(DateFmt, dt)
	if err != nil {
		t.Error(err)
	} else if AsLocal(tm).UnixMilli() != 1136185445000 {
		t.Fail()
	}
}

// TestUnixDay
// ****************************************************************************************************************************************
func TestUnixDay(t *testing.T) {
	v, e := Parse(RCF3339, "1970-01-31T00:00:00+08:00")
	if e != nil {
		t.Error(e)
	}

	if UnixDay(v) != 30 {
		t.Fail()
	}
}

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
