package slices

import "testing"

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// TestAppend
// ****************************************************************************************************************************************
func TestAppend(t *testing.T) {
	c := New()
	if !c.Append("abc") {
		t.Fail()
	}

	if c.Append("abc") {
		t.Fail()
	}
}

// TestGetString
// ****************************************************************************************************************************************
func TestGetString(t *testing.T) {
	c := New()
	c.Append("a")
	c.Append("b")
	c.Append("c")

	s := c.GetStrings()
	if len(s) != 3 || s[0] != "a" || s[1] != "b" || s[2] != "c" {
		t.Fail()
	}
}

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
