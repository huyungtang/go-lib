package gcal

import (
	"context"

	"github.com/huyungtang/go-lib/google"
	"github.com/huyungtang/go-lib/times"
	"google.golang.org/api/calendar/v3"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// Init
// ****************************************************************************************************************************************
func Init(opts ...google.Options) (serv Service, err error) {
	var s *calendar.Service
	cfg := google.ApplyOptions(opts)
	if s, err = calendar.NewService(context.Background(), cfg.GetClientOption()); err != nil {
		return
	}

	return &service{s}, nil
}

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// service ********************************************************************************************************************************
type service struct {
	*calendar.Service
}

// Service
// ****************************************************************************************************************************************
type Service interface {
	// TODO: Not Implemented
	AddEvent() error
}

// AddEvent()
// ****************************************************************************************************************************************
func (o *service) AddEvent() (err error) {
	_, err = o.Events.Insert("primary", &calendar.Event{
		Summary: "testing calendar event 2",
		Start:   &calendar.EventDateTime{DateTime: times.Now().Format(times.RCF3339), TimeZone: "Asia/Taipei"},
		End:     &calendar.EventDateTime{DateTime: times.Now().Add(0, 0, 0, 1).Format(times.RCF3339), TimeZone: "Asia/Taipei"},
	}).Do()

	return
}

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
