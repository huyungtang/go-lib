package context

import (
	"testing"
)

// constants & variables ******************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// public functions ***********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// TestContext
// ****************************************************************************************************************************************
func TestContext(t *testing.T) {
	ctx := Init(
		WithValueOption("testing-key-1", "value = 1"),
		WithValueOption("testing-key-2", "value = 2"),
		HandlerOption(func(ctx Context) (err error) {
			t.Logf("handler %04d start\n", 1)
			err = ctx.Next()
			t.Logf("handler %04d end\n", 1)
			return
		}),
		HandlerOption(func(ctx Context) (err error) {
			t.Logf("handler %04d start\n", 2)
			// return errors.New("text")
			err = ctx.Next()
			t.Logf("handler %04d end\n", 2)
			return
		}),
		HandlerOption(func(ctx Context) (err error) {
			t.Logf("handler %04d start\n", 3)
			err = ctx.Next()
			t.Logf("handler %04d end\n", 3)
			return
		}),
	)
	t.Log(ctx.Next())
	t.Fail()
}

// type defineds **************************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************

// private functions **********************************************************************************************************************
// ****************************************************************************************************************************************
// ****************************************************************************************************************************************
